#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
# 

name: OpenWrt-COAENS N1 5.15.35

on:
#  push:
#    branches: 
#      - master
#  schedule:
#    - cron: 0 20 * * 0
  watch:
    types: started
#  issues:
#    types: closed

env:
 TZ: Asia/Shanghai


jobs:
  build_openwrt:
    name: Build OpenWrt N1
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          
          df -h

      - name: Clone Lean's openwrt
        run: |
          git clone https://github.com/coolsnowwolf/lede.git lede
          cd lede
          git checkout 3516c9aa8a3a19ed717bc888905f549dd7b98289

      - name: Git Third Party Plugin
        run: |
          cd lede/package
          git clone https://github.com/fw876/helloworld.git
          
      - name: Update feeds
        run: |
          cd lede
          sed -i '5s/src-git/#src-git/g' ./feeds.conf.default
          
          sed -i 's/\"#src-git\"/\"src-git\"/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Replace Theme Resources
        run: |
          cp ./favicon.ico lede/feeds/luci/themes/luci-theme-bootstrap/htdocs/luci-static/bootstrap/favicon.ico       

      - name: Generate Configuration
        env:
          CONFIG_FILE: 'customize.config'
        run: |
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE lede/.config
          sed -i 's/^[ \t]*//g' lede/.config
          
          chmod +x ./diy.sh && ./diy.sh
          
          cd lede && cat .config
          make defconfig

      - name: Make download
        run: |
          cd lede
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          cd lede
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          cd lede
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./lede/artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./lede/artifact/package/

      # - name: Deliver firmware
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: OpenWrt_firmware
      #     path: ./lede/bin/targets/
          
          
      - name: Package Armvirt as OpenWrt
        uses: ophub/flippy-openwrt-actions@main
        env:
          OPENWRT_ARMVIRT: ./lede/bin/targets/*/*/*.tar.gz
          PACKAGE_SOC: s905d
          KERNEL_VERSION_NAME: 5.15.35_5.4.188
          WHOAMI: COAENS
          
      # - name: Organize files
      #   id: organize
      #   run: |
      #     cd lede/bin/targets/*/*
      #     rm -rf packages openwrt-armvirt-64-default.manifest openwrt-armvirt-64-Image sha256sums version.buildinfo feeds.buildinfo
      #     echo "FIRMWARE=$PWD" >> $GITHUB_ENV
      #     echo "::set-output name=status::success"
          
      - name: Upload firmware directory
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware_5.15
          path: /opt/openwrt_packit/output/*5.15*
          
      - name: Upload firmware directory
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware_5.4
          path: /opt/openwrt_packit/output/*5.4*
            

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./lede/artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true